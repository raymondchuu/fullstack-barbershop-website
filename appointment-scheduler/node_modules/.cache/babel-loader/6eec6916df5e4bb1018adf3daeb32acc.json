{"ast":null,"code":"var _jsxFileName = \"/Users/RaymondChu/full-barbershop-website-master/appointment-scheduler/src/components/Appointment.js\";\n\n/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from \"material-ui/Card\";\nimport Step from \"@material-ui/core/Step\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\";\nconst API_BASE = \"http://localhost:8000/\";\n\nclass AppointmentApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.handleNext = () => {\n      const {\n        stepIndex\n      } = this.state;\n      this.setState({\n        stepIndex: stepIndex + 1,\n        finished: stepIndex >= 2\n      });\n    };\n\n    this.handlePrev = () => {\n      const {\n        stepIndex\n      } = this.state;\n\n      if (stepIndex > 0) {\n        this.setState({\n          stepIndex: stepIndex - 1\n        });\n      }\n    };\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(API_BASE + '').then(response => {\n      console.log(\"response via db: \", response.data);\n      this.handleDBResponse(response.data);\n    });\n  }\n\n  handleSetAppointmentDate(date) {\n    this.setState({\n      appointmentDate: date,\n      confirmationTextVisible: true\n    });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.setState({\n      appointmentSlot: slot\n    });\n  }\n\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({\n      appointmentMeridiem: meridiem\n    });\n  }\n\n  handleSubmit() {\n    this.setState({\n      confirmationModalOpen: false\n    });\n    const newAppointment = {\n      name: this.state.firstName + \" \" + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      appointment_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n      appointment_time: this.state.appointmentSlot + 8\n    };\n    axios.post(API_BASE + \"bookAppointment\", newAppointment).then(response => this.setState({\n      confirmationSnackbarMessage: \"Appointment successfully added!\",\n      confirmationSnackbarOpen: true,\n      processed: true\n    })).catch(err => {\n      console.log(err);\n      return this.setState({\n        confirmationSnackbarMessage: \"Appointment failed to save.\",\n        confirmationSnackbarOpen: true\n      });\n    });\n  }\n\n  validateEmail(email) {\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regex.test(email) ? this.setState({\n      email: email,\n      validEmail: true\n    }) : this.setState({\n      validEmail: false\n    });\n  }\n\n  validatePhone(phoneNumber) {\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    return regex.test(phoneNumber) ? this.setState({\n      phone: phoneNumber,\n      validPhone: true\n    }) : this.setState({\n      validPhone: false\n    });\n  }\n\n  checkDisableDate(day) {\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\n    return this.state.schedule[dateString] === true || moment(day).startOf(\"day\").diff(moment().startOf(\"day\")) < 0;\n  }\n\n  handleDBResponse(response) {\n    const appointments = response;\n    const today = moment().startOf(\"day\"); //start of today 12 am\n\n    const initialSchedule = {};\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\n    const schedule = !appointments.length ? initialSchedule : appointments.reduce((currentSchedule, appointment) => {\n      const {\n        appointment_date,\n        appointment_time\n      } = appointment;\n      const dateString = moment(appointment_date, \"YYYY-DD-MM\").format(\"YYYY-DD-MM\");\n      !currentSchedule[appointment_date] ? currentSchedule[dateString] = Array(8).fill(false) : null;\n      Array.isArray(currentSchedule[dateString]) ? currentSchedule[dateString][appointment_time] = true : null;\n      return currentSchedule;\n    }, initialSchedule);\n\n    for (let day in schedule) {\n      let slots = schedule[day];\n      slots.length ? slots.every(slot => slot === true) ? schedule[day] = true : null : null;\n    }\n\n    this.setState({\n      schedule: schedule\n    });\n  }\n\n  renderAppointmentConfirmation() {\n    const spanStyle = {\n      color: \"#00C853\"\n    };\n    return /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(DialogTitle, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }\n    }, \"Confirm your appointment\"), /*#__PURE__*/React.createElement(DialogContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(DialogContentText, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 169,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 9\n      }\n    }, \"Name:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 11\n      }\n    }, this.state.firstName, \" \", this.state.lastName)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }\n    }, \"Number: \", /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 19\n      }\n    }, this.state.phone)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 179,\n        columnNumber: 9\n      }\n    }, \"Email: \", /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 18\n      }\n    }, this.state.email)), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 9\n      }\n    }, \"Appointment:\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 11\n      }\n    }, moment(this.state.appointmentDate).format(\"dddd[,] MMMM Do[,] YYYY\")), \" \", \"at\", \" \", /*#__PURE__*/React.createElement(\"span\", {\n      style: spanStyle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 11\n      }\n    }, moment().hour(8).minute(0).add(this.state.appointmentSlot, \"hours\").format(\"h:mm a\"))))), /*#__PURE__*/React.createElement(DialogActions, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        confirmationModalOpen: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 9\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.handleSubmit(),\n      style: {\n        marginLeft: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 204,\n        columnNumber: 9\n      }\n    }, \"Confirm\")));\n  }\n\n  renderAppointmentTimes() {\n    if (!this.state.isLoading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format(\"YYYY-DD-MM\");\n        const time1 = moment().hour(8).minute(0).add(slot, \"hours\");\n        const time2 = moment().hour(8).minute(0).add(slot + 1, \"hours\");\n        const scheduleDisabled = this.state.schedule[appointmentDateString] ? this.state.schedule[moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")][slot] : false;\n        const meridiemDisabled = this.state.appointmentMeridiem ? time1.format(\"a\") === \"am\" : time1.format(\"a\") === \"pm\";\n        return /*#__PURE__*/React.createElement(RadioButton, {\n          label: time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\"),\n          key: slot,\n          value: slot,\n          style: {\n            marginBottom: 15,\n            display: meridiemDisabled ? \"none\" : \"inherit\"\n          },\n          disabled: scheduleDisabled || meridiemDisabled,\n          __self: this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 11\n          }\n        });\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderStepActions(step) {\n    const {\n      stepIndex\n    } = this.state;\n    return /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: \"12px 0\"\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 261,\n        columnNumber: 7\n      }\n    }, step > 0 && /*#__PURE__*/React.createElement(Button, {\n      disabled: stepIndex === 0,\n      onClick: this.handlePrev,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 263,\n        columnNumber: 11\n      }\n    }, \" Back \"), /*#__PURE__*/React.createElement(Button, {\n      label: stepIndex === 2 ? \"Finish\" : \"Next\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: this.handleNext,\n      style: {\n        marginLeft: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 9\n      }\n    }, \" \", stepIndex === 2 ? \"Finish\" : \"Next\", \" \"));\n  }\n\n  render() {\n    const {\n      finished,\n      isLoading,\n      smallScreen,\n      stepIndex,\n      confirmationModalOpen,\n      confirmationSnackbarOpen,\n      ...data\n    } = this.state;\n    const contactFormFilled = data.firstName && data.lastName && data.phone && data.email && data.validPhone && data.validEmail;\n\n    const DatePickerExampleSimple = () => /*#__PURE__*/React.createElement(DatePicker, {\n      hintText: \"Select Date\",\n      mode: smallScreen ? \"portrait\" : \"landscape\",\n      onChange: (n, date) => this.handleSetAppointmentDate(date),\n      shouldDisableDate: day => this.checkDisableDate(day),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }\n    });\n\n    const modalActions = [/*#__PURE__*/React.createElement(Button, {\n      onClick: () => this.setState({\n        confirmationModalOpen: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 309,\n        columnNumber: 7\n      }\n    }, \"Cancel\"), /*#__PURE__*/React.createElement(Button, {\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: () => this.handleSubmit(),\n      style: {\n        marginLeft: 12\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 312,\n        columnNumber: 7\n      }\n    }, \"Confirm\")];\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      style: {\n        maxWidth: !smallScreen ? \"80%\" : \"100%\",\n        margin: \"auto\",\n        marginTop: !smallScreen ? 20 : 0\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Card, {\n      style: {\n        margin: \"100px 10px 10px 10px\",\n        padding: \"12px 12px 25px 12px\",\n        height: smallScreen ? \"100vh\" : null\n      },\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Stepper, {\n      activeStep: stepIndex,\n      orientation: \"vertical\",\n      linear: \"false\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(Step, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 340,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 341,\n        columnNumber: 17\n      }\n    }, \"Choose an available day for your appointment\"), /*#__PURE__*/React.createElement(StepContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 344,\n        columnNumber: 17\n      }\n    }, DatePickerExampleSimple(), this.renderStepActions(0))), /*#__PURE__*/React.createElement(Step, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 17\n      }\n    }, \"Choose an available time for your appointment\"), /*#__PURE__*/React.createElement(StepContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 353,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(SelectField, {\n      floatingLabelText: \"AM/PM\",\n      value: data.appointmentMeridiem,\n      onChange: (evt, key, payload) => this.handleSetAppointmentMeridiem(payload),\n      selectionRenderer: value => value ? \"PM\" : \"AM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 354,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(MenuItem, {\n      value: 0,\n      primaryText: \"AM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(MenuItem, {\n      value: 1,\n      primaryText: \"PM\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 21\n      }\n    })), /*#__PURE__*/React.createElement(RadioButtonGroup, {\n      style: {\n        marginTop: 15,\n        marginLeft: 15\n      },\n      name: \"appointmentTimes\",\n      defaultSelected: data.appointmentSlot,\n      onChange: (evt, val) => this.handleSetAppointmentSlot(val),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 365,\n        columnNumber: 19\n      }\n    }, this.renderAppointmentTimes()), this.renderStepActions(1))), /*#__PURE__*/React.createElement(Step, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 379,\n        columnNumber: 15\n      }\n    }, /*#__PURE__*/React.createElement(StepLabel, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 380,\n        columnNumber: 17\n      }\n    }, \"Share your contact information with us and we'll send you a reminder\"), /*#__PURE__*/React.createElement(StepContent, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 385,\n        columnNumber: 19\n      }\n    }, /*#__PURE__*/React.createElement(\"section\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 386,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"First Name\",\n      style: {\n        display: \"block\"\n      },\n      name: \"first_name\",\n      hintText: \"First Name\",\n      onChange: (evt, newValue) => this.setState({\n        firstName: newValue\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 387,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Last Name\",\n      style: {\n        display: \"block\"\n      },\n      name: \"last_name\",\n      hintText: \"Last Name\",\n      floatingLabelText: \"Last Name\",\n      onChange: (evt, newValue) => this.setState({\n        lastName: newValue\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 409,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Email\",\n      style: {\n        display: \"block\"\n      },\n      name: \"email\",\n      hintText: \"youraddress@mail.com\",\n      floatingLabelText: \"Email\",\n      errorText: data.validEmail ? null : \"Enter a valid email address\",\n      onChange: (evt, newValue) => this.validateEmail(newValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 410,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 24\n      }\n    }), /*#__PURE__*/React.createElement(TextField, {\n      id: \"standard-basic\",\n      label: \"Phone\",\n      style: {\n        display: \"block\"\n      },\n      name: \"phone\",\n      hintText: \"+2348995989\",\n      floatingLabelText: \"Phone\",\n      errorText: data.validPhone ? null : \"Enter a valid phone number\",\n      onChange: (evt, newValue) => this.validatePhone(newValue),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 426,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(\"br\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 440,\n        columnNumber: 23\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      style: {\n        display: \"block\"\n      },\n      labelPosition: \"before\",\n      variant: \"contained\",\n      color: \"primary\",\n      fullWidth: true,\n      onClick: () => this.setState({\n        confirmationModalOpen: !this.state.confirmationModalOpen\n      }),\n      disabled: !contactFormFilled || data.processed,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 442,\n        columnNumber: 23\n      }\n    }, contactFormFilled ? \"Schedule\" : \"Fill out your information to schedule\"))), this.renderStepActions(2))))), /*#__PURE__*/React.createElement(Dialog, {\n      modal: true,\n      open: confirmationModalOpen,\n      title: \"Confirm your appointment\",\n      \"aria-labelledby\": \"alert-dialog-title\",\n      \"aria-describedby\": \"alert-dialog-description\",\n      fullWidth: \"400px\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 465,\n        columnNumber: 11\n      }\n    }, this.renderAppointmentConfirmation()), /*#__PURE__*/React.createElement(SnackBar, {\n      message: isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\",\n      open: confirmationSnackbarOpen,\n      autoHideDuration: 10000,\n      onRequestClose: () => this.setState({\n        confirmationSnackbarOpen: false\n      }),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 475,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default AppointmentApp;","map":{"version":3,"sources":["/Users/RaymondChu/full-barbershop-website-master/appointment-scheduler/src/components/Appointment.js"],"names":["React","Component","Button","moment","DatePicker","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","SelectField","MenuItem","TextField","SnackBar","Card","Step","Stepper","StepLabel","StepContent","RadioButton","RadioButtonGroup","axios","API_BASE","AppointmentApp","constructor","props","context","handleNext","stepIndex","state","setState","finished","handlePrev","firstName","lastName","email","schedule","confirmationModalOpen","appointmentDateSelected","appointmentMeridiem","validEmail","validPhone","smallScreen","window","innerWidth","componentDidMount","get","then","response","console","log","data","handleDBResponse","handleSetAppointmentDate","date","appointmentDate","confirmationTextVisible","handleSetAppointmentSlot","slot","appointmentSlot","handleSetAppointmentMeridiem","meridiem","handleSubmit","newAppointment","name","phone","appointment_date","format","appointment_time","post","confirmationSnackbarMessage","confirmationSnackbarOpen","processed","catch","err","validateEmail","regex","test","validatePhone","phoneNumber","checkDisableDate","day","dateString","startOf","diff","appointments","today","initialSchedule","length","reduce","currentSchedule","appointment","Array","fill","isArray","slots","every","renderAppointmentConfirmation","spanStyle","color","hour","minute","add","marginLeft","renderAppointmentTimes","isLoading","keys","map","appointmentDateString","time1","time2","scheduleDisabled","meridiemDisabled","marginBottom","display","renderStepActions","step","margin","render","contactFormFilled","DatePickerExampleSimple","n","modalActions","maxWidth","marginTop","padding","height","evt","key","payload","value","val","newValue"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React, { Component } from \"react\";\nimport Button from \"@material-ui/core/Button\";\nimport moment from \"moment\";\nimport DatePicker from \"material-ui/DatePicker\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport SelectField from \"material-ui/SelectField\";\nimport MenuItem from \"material-ui/MenuItem\";\nimport TextField from \"material-ui/TextField\";\nimport SnackBar from \"material-ui/Snackbar\";\nimport Card from \"material-ui/Card\";\nimport Step from \"@material-ui/core/Step\";\nimport Stepper from \"@material-ui/core/Stepper\";\nimport StepLabel from \"@material-ui/core/StepLabel\";\nimport StepContent from \"@material-ui/core/StepContent\";\nimport { RadioButton, RadioButtonGroup } from \"material-ui/RadioButton\";\nimport axios from \"axios\";\n\nconst API_BASE = \"http://localhost:8000/\";\n\nclass AppointmentApp extends Component {\n  constructor(props, context) {\n    super(props, context);\n\n    this.state = {\n      firstName: \"\",\n      lastName: \"\",\n      email: \"\",\n      schedule: [],\n      confirmationModalOpen: false,\n      appointmentDateSelected: false,\n      appointmentMeridiem: 0,\n      validEmail: true,\n      validPhone: true,\n      finished: false,\n      smallScreen: window.innerWidth < 768,\n      stepIndex: 0\n    };\n  }\n\n  componentDidMount() {\n    axios.get(API_BASE + '').then(response => {\n      console.log(\"response via db: \", response.data);\n      this.handleDBResponse(response.data);\n    });\n  }\n\n  handleSetAppointmentDate(date) {\n    this.setState({ appointmentDate: date, confirmationTextVisible: true });\n  }\n\n  handleSetAppointmentSlot(slot) {\n    this.setState({ appointmentSlot: slot });\n  }\n\n  handleSetAppointmentMeridiem(meridiem) {\n    this.setState({ appointmentMeridiem: meridiem });\n  }\n\n  handleSubmit() {\n    this.setState({ confirmationModalOpen: false });\n    const newAppointment = {\n      name: this.state.firstName + \" \" + this.state.lastName,\n      email: this.state.email,\n      phone: this.state.phone,\n      appointment_date: moment(this.state.appointmentDate).format(\"YYYY-DD-MM\"),\n      appointment_time: this.state.appointmentSlot + 8\n    };\n    axios\n      .post(API_BASE + \"bookAppointment\", newAppointment)\n      .then(response =>\n        this.setState({\n          confirmationSnackbarMessage: \"Appointment successfully added!\",\n          confirmationSnackbarOpen: true,\n          processed: true\n        })\n      )\n      .catch(err => {\n        console.log(err);\n        return this.setState({\n          confirmationSnackbarMessage: \"Appointment failed to save.\",\n          confirmationSnackbarOpen: true\n        });\n      });\n  }\n  \n  handleNext = () => {\n    const { stepIndex } = this.state;\n    this.setState({\n      stepIndex: stepIndex + 1,\n      finished: stepIndex >= 2\n    });\n  };\n\n  handlePrev = () => {\n    const { stepIndex } = this.state;\n    if (stepIndex > 0) {\n      this.setState({ stepIndex: stepIndex - 1 });\n    }\n  };\n\n  validateEmail(email) {\n    const regex = /^(([^<>()\\[\\]\\.,;:\\s@\\\"]+(\\.[^<>()\\[\\]\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@(([^<>()[\\]\\.,;:\\s@\\\"]+\\.)+[^<>()[\\]\\.,;:\\s@\\\"]{2,})$/i;\n    return regex.test(email)\n      ? this.setState({ email: email, validEmail: true })\n      : this.setState({ validEmail: false });\n  }\n\n  validatePhone(phoneNumber) {\n    const regex = /^[\\+]?[(]?[0-9]{3}[)]?[-\\s\\.]?[0-9]{3}[-\\s\\.]?[0-9]{4,6}$/;\n    return regex.test(phoneNumber)\n      ? this.setState({ phone: phoneNumber, validPhone: true })\n      : this.setState({ validPhone: false });\n  }\n\n  checkDisableDate(day) {\n    const dateString = moment(day).format(\"YYYY-DD-MM\");\n    return (\n      this.state.schedule[dateString] === true ||\n      moment(day)\n        .startOf(\"day\")\n        .diff(moment().startOf(\"day\")) < 0\n    );\n  }\n\n  handleDBResponse(response) {\n    const appointments = response;\n    const today = moment().startOf(\"day\"); //start of today 12 am\n    const initialSchedule = {};\n    initialSchedule[today.format(\"YYYY-DD-MM\")] = true;\n    const schedule = !appointments.length\n      ? initialSchedule\n      : appointments.reduce((currentSchedule, appointment) => {\n          const { appointment_date, appointment_time } = appointment;\n          const dateString = moment(appointment_date, \"YYYY-DD-MM\").format(\n            \"YYYY-DD-MM\"\n          );\n          !currentSchedule[appointment_date] ? (currentSchedule[dateString] = Array(8).fill(false)) : null;\n          Array.isArray(currentSchedule[dateString])\n            ? (currentSchedule[dateString][appointment_time] = true)\n            : null;\n          return currentSchedule;\n        }, initialSchedule);\n\n    for (let day in schedule) {\n      let slots = schedule[day];\n      slots.length\n        ? slots.every(slot => slot === true) ? (schedule[day] = true) : null\n        : null;\n    }\n\n    this.setState({\n      schedule: schedule\n    });\n  }\n\n  renderAppointmentConfirmation() {\n    const spanStyle = { color: \"#00C853\" };\n    return (\n      <section>\n        <DialogTitle>\n          {\"Confirm your appointment\"}\n        </DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n        <p>\n          Name:{\" \"}\n          <span style={spanStyle}>\n            {this.state.firstName} {this.state.lastName}\n          </span>\n        </p>\n        <p>\n          Number: <span style={spanStyle}>{this.state.phone}</span>\n        </p>\n        <p>\n          Email: <span style={spanStyle}>{this.state.email}</span>\n        </p>\n        <p>\n          Appointment:{\" \"}\n          <span style={spanStyle}>\n            {moment(this.state.appointmentDate).format(\n              \"dddd[,] MMMM Do[,] YYYY\"\n            )}\n          </span>{\" \"}\n          at{\" \"}\n          <span style={spanStyle}>\n            {moment()\n              .hour(8)\n              .minute(0)\n              .add(this.state.appointmentSlot, \"hours\")\n              .format(\"h:mm a\")}\n          </span>\n        </p>\n        </DialogContentText>\n        </DialogContent>\n        <DialogActions>\n        <Button\n        onClick={() => this.setState({ confirmationModalOpen: false })}\n          >Cancel</Button>\n        <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => this.handleSubmit()}\n        style={{ marginLeft: 12 }}\n        >Confirm</Button>\n        </DialogActions>\n      </section>\n    );\n  }\n\n  renderAppointmentTimes() {\n    if (!this.state.isLoading) {\n      const slots = [...Array(8).keys()];\n      return slots.map(slot => {\n        const appointmentDateString = moment(this.state.appointmentDate).format(\n          \"YYYY-DD-MM\"\n        );\n        const time1 = moment()\n          .hour(8)\n          .minute(0)\n          .add(slot, \"hours\");\n        const time2 = moment()\n          .hour(8)\n          .minute(0)\n          .add(slot + 1, \"hours\");\n        const scheduleDisabled = this.state.schedule[appointmentDateString]\n          ? this.state.schedule[\n              moment(this.state.appointmentDate).format(\"YYYY-DD-MM\")\n            ][slot]\n          : false;\n        const meridiemDisabled = this.state.appointmentMeridiem\n          ? time1.format(\"a\") === \"am\"\n          : time1.format(\"a\") === \"pm\";\n  \n        return (\n          <RadioButton\n            label={time1.format(\"h:mm a\") + \" - \" + time2.format(\"h:mm a\")}\n            key={slot}\n            value={slot}\n            style={{\n              marginBottom: 15,\n              display: meridiemDisabled ? \"none\" : \"inherit\"\n            }}\n            disabled={scheduleDisabled || meridiemDisabled}\n          />\n        );\n      });\n    } else {\n      return null;\n    }\n  }\n\n  renderStepActions(step) {\n    const { stepIndex } = this.state;\n\n    return (\n      <div style={{ margin: \"12px 0\" }}>\n        {step > 0 && (\n          <Button\n            disabled={stepIndex === 0}\n            onClick={this.handlePrev}\n          > Back </Button>\n        )}\n        <Button\n          label={stepIndex === 2 ? \"Finish\" : \"Next\"}\n          variant=\"contained\"\n          color=\"primary\"\n          onClick={this.handleNext}\n          style={{ marginLeft: 12 }}\n        > { stepIndex === 2? \"Finish\" : \"Next\" } </Button>\n      </div>\n    );\n  }\n\n\n  render() {\n    const {\n      finished,\n      isLoading,\n      smallScreen,\n      stepIndex,\n      confirmationModalOpen,\n      confirmationSnackbarOpen,\n      ...data\n    } = this.state;\n\n    const contactFormFilled =\n      data.firstName &&\n      data.lastName &&\n      data.phone &&\n      data.email &&\n      data.validPhone &&\n      data.validEmail;\n\n    const DatePickerExampleSimple = () => (\n        <DatePicker\n          hintText=\"Select Date\"\n          mode={smallScreen ? \"portrait\" : \"landscape\"}\n          onChange={(n, date) => this.handleSetAppointmentDate(date)}\n          shouldDisableDate={day => this.checkDisableDate(day)} \n        />\n    );\n\n    const modalActions = [\n      <Button\n        onClick={() => this.setState({ confirmationModalOpen: false })}\n      >Cancel</Button>,\n      <Button\n        variant=\"contained\"\n        color=\"primary\"\n        onClick={() => this.handleSubmit()}\n        style={{ marginLeft: 12 }}\n      >Confirm</Button>\n    ];\n    return (\n      <div> \n        <section\n          style={{\n            maxWidth: !smallScreen ? \"80%\" : \"100%\",\n            margin: \"auto\",\n            marginTop: !smallScreen ? 20 : 0\n          }}\n        >\n          <Card\n            style={{\n              margin: \"100px 10px 10px 10px\",\n              padding: \"12px 12px 25px 12px\",\n              height: smallScreen ? \"100vh\" : null\n            }}\n          >\n            <Stepper\n              activeStep={stepIndex}\n              orientation=\"vertical\"\n              linear=\"false\"\n            >\n              <Step>\n                <StepLabel>\n                  Choose an available day for your appointment\n                </StepLabel>\n                <StepContent>\n                  {DatePickerExampleSimple()}\n                  {this.renderStepActions(0)}\n                </StepContent>\n              </Step>\n              <Step>\n                <StepLabel>\n                  Choose an available time for your appointment\n                </StepLabel>\n                <StepContent>\n                  <SelectField\n                    floatingLabelText=\"AM/PM\"\n                    value={data.appointmentMeridiem}\n                    onChange={(evt, key, payload) =>\n                      this.handleSetAppointmentMeridiem(payload)\n                    }\n                    selectionRenderer={value => (value ? \"PM\" : \"AM\")}\n                  >\n                    <MenuItem value={0} primaryText=\"AM\" />\n                    <MenuItem value={1} primaryText=\"PM\" />\n                  </SelectField>\n                  <RadioButtonGroup\n                    style={{\n                      marginTop: 15,\n                      marginLeft: 15\n                    }}\n                    name=\"appointmentTimes\"\n                    defaultSelected={data.appointmentSlot}\n                    onChange={(evt, val) => this.handleSetAppointmentSlot(val)}\n                  >\n                    {this.renderAppointmentTimes()}\n                  </RadioButtonGroup>\n                  {this.renderStepActions(1)}\n                </StepContent>\n              </Step>\n              <Step>\n                <StepLabel>\n                  Share your contact information with us and we'll send you a\n                  reminder\n                </StepLabel>\n                <StepContent>\n                  <p>\n                    <section>\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"First Name\"\n                        style={{ display: \"block\" }}\n                        name=\"first_name\"\n                        hintText=\"First Name\"\n                        onChange={(evt, newValue) =>\n                        this.setState({ firstName: newValue })\n                        }\n                      />\n                      <br/>\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"Last Name\"\n                        style={{ display: \"block\" }}\n                        name=\"last_name\"\n                        hintText=\"Last Name\"\n                        floatingLabelText=\"Last Name\"\n                        onChange={(evt, newValue) =>\n                          this.setState({ lastName: newValue })\n                        }\n                      />\n                      <br/>\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"Email\"\n                        style={{ display: \"block\" }}\n                        name=\"email\"\n                        hintText=\"youraddress@mail.com\"\n                        floatingLabelText=\"Email\"\n                        errorText={\n                          data.validEmail ? null : \"Enter a valid email address\"\n                        } \n                        onChange={(evt, newValue) =>\n                          this.validateEmail(newValue)\n                        }\n                      />\n                       <br/>\n\n                      <TextField\n                        id=\"standard-basic\"\n                        label=\"Phone\"\n                        style={{ display: \"block\" }}\n                        name=\"phone\"\n                        hintText=\"+2348995989\"\n                        floatingLabelText=\"Phone\"\n                        errorText={\n                          data.validPhone ? null : \"Enter a valid phone number\"\n                        }\n                        onChange={(evt, newValue) =>\n                          this.validatePhone(newValue)\n                        }\n                      />\n                      <br/>\n\n                      <Button\n                        style={{ display: \"block\" }}\n                        labelPosition=\"before\"\n                        variant=\"contained\"\n                        color=\"primary\"\n                        fullWidth={true}\n                        onClick={() =>\n                          this.setState({\n                            confirmationModalOpen: !this.state\n                              .confirmationModalOpen\n                          })\n                        }\n                        disabled={!contactFormFilled || data.processed}\n                      >{contactFormFilled\n                      ? \"Schedule\"\n                      : \"Fill out your information to schedule\"}</Button>\n                    </section>\n                  </p>\n                  {this.renderStepActions(2)}\n                </StepContent>\n              </Step>\n            </Stepper>\n          </Card>\n          <Dialog\n            modal={true}\n            open={confirmationModalOpen}\n            title=\"Confirm your appointment\"\n            aria-labelledby=\"alert-dialog-title\"\n            aria-describedby=\"alert-dialog-description\"\n            fullWidth=\"400px\"\n          >\n            {this.renderAppointmentConfirmation()}\n          </Dialog>\n          <SnackBar\n            message={\n              isLoading ? \"Loading... \" : data.confirmationSnackbarMessage || \"\"\n            }\n            open = {confirmationSnackbarOpen }\n            autoHideDuration={10000}\n            onRequestClose={() =>\n              this.setState({ confirmationSnackbarOpen: false })\n            }\n          />\n        </section>\n      </div>\n    );\n  }\n}\nexport default AppointmentApp;\n"]},"metadata":{},"sourceType":"module"}